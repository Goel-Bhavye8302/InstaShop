ParseObject class1 = new ParseObject("Class1");        // creating a new parse class
        class1.put("username", "bhavye");                                 // adding a ney key-value pair
        class1.put("age", 20);
        class1.put("username", "sanyam");
        class1.saveInBackground(new SaveCallback() {
            @Override
            public void done(ParseException e) {
                if(e == null){
                    Log.i("PARSE NEW CLASS", "SUCCESS");
                }
                else {
                    e.printStackTrace();
                    Log.i("PARSE NEW CLASS", "FAILED");
                }
            }
        });

        ParseQuery<ParseObject> query = ParseQuery.getQuery("Class1");
        query.getInBackground("qplZkrspS8", new GetCallback<ParseObject>() {
            @Override
            public void done(ParseObject object, ParseException e) {
                if(e == null && object != null){
                    object.put("age", 30);
                    object.saveInBackground();

                    Log.i("age----->", Integer.toString(object.getInt("age")));
                }
                else{
                    e.printStackTrace();
                }
            }
        });

        ParseQuery<ParseObject> query = ParseQuery.getQuery("Class1");
                query.whereEqualTo("username", "bhavye");         // to find the objects only having user name "bhavye"
                query.setLimit(1);                         // telling it we need only 1 username matching with "bhavye"
                query.findInBackground(new FindCallback<ParseObject>() {                 // to iterate through the objects of the class
                    @Override
                    public void done(List<ParseObject> objects, ParseException e) {
                        if(e == null && !objects.isEmpty()){
                            for(ParseObject it : objects){
                                Log.i("iterating the class : ", it.getString("username"));
                            }
                        }
                    }
                });

        // USER SIGN UP ----->
        ParseUser user = new ParseUser();
        user.setUsername("bhavye");
        user.setPassword("bhavye8302");

        user.signUpInBackground(new SignUpCallback() {
            @Override
            public void done(ParseException e) {
                if(e == null){
                    Log.i("signing up user : ", "successful");
                }
                else e.printStackTrace();
            }
        });

        // USER LOG IN ----->
        ParseUser.logInInBackground("bhavye", "bhavye8302", new LogInCallback() {
            @Override
            public void done(ParseUser user, ParseException e) {
                if(e == null && user != null){
                    Log.i("Username : ", user.getString("username"));
                }
                else e.printStackTrace();
            }
        });

        // TO CHECK IF THE USER IS LOGGED IN
        if(ParseUser.getCurrentUser() != null){
            Log.i("User State : ", "Logged in");
        }
        else{
            Log.i("User State : ", "Pls Log in");
        }

            // TO LOG OUT
            ParseUser.logOutInBackground(new LogOutCallback() {
                @Override
                public void done(ParseException e) {
                    if(e == null) Log.i("User State : ", "Logged out");
                    else e.printStackTrace();
                }
            });
